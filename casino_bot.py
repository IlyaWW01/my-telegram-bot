import os
import random
import sqlite3
from dotenv import load_dotenv
from aiogram import Bot, Dispatcher, types
from aiogram.filters import Command
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.enums import ParseMode
import asyncio

# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–æ–∫–µ–Ω–∞
load_dotenv()
TOKEN = os.getenv('BOT_TOKEN')

if not TOKEN:
    raise ValueError("–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .env —Ñ–∞–π–ª")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞
bot = Bot(token=TOKEN, parse_mode=ParseMode.HTML)
dp = Dispatcher()

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
conn = sqlite3.connect('casino.db')
cursor = conn.cursor()

# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤
cursor.execute('''
CREATE TABLE IF NOT EXISTS players (
    user_id INTEGER PRIMARY KEY,
    username TEXT,
    credits INTEGER DEFAULT 1000
)
''')
conn.commit()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∏–≥—Ä–∞–º–∏
games_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üé∞ –°–ª–æ—Ç—ã (10 –∫—Ä–µ–¥–∏—Ç–æ–≤)"), KeyboardButton(text="üé≤ –†—É–ª–µ—Ç–∫–∞ (20 –∫—Ä–µ–¥–∏—Ç–æ–≤)")],
        [KeyboardButton(text="‚ô†Ô∏è –ë–ª—ç–∫–¥–∂–µ–∫ (50 –∫—Ä–µ–¥–∏—Ç–æ–≤)"), KeyboardButton(text="üí∞ –ú–æ–π –±–∞–ª–∞–Ω—Å")]
    ],
    resize_keyboard=True
)

# –°—Ç–∞—Ä—Ç
@dp.message(Command("start"))
async def start(message: types.Message):
    user_id = message.from_user.id
    username = message.from_user.username

    cursor.execute('SELECT credits FROM players WHERE user_id = ?', (user_id,))
    if cursor.fetchone() is None:
        cursor.execute('INSERT INTO players (user_id, username, credits) VALUES (?, ?, 1000)', (user_id, username))
        conn.commit()
        await message.answer("üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ! –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ 1000 –∫—Ä–µ–¥–∏—Ç–æ–≤.", reply_markup=games_keyboard)
    else:
        await message.answer("üîÑ –í–æ–∑–≤—Ä–∞—â–∞–µ–º –≤–∞—Å –≤ –∏–≥—Ä—É!", reply_markup=games_keyboard)

# –û—Å—Ç–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ (—Å–ª–æ—Ç—ã, —Ä—É–ª–µ—Ç–∫–∞ –∏ —Ç.–¥.) –æ—Å—Ç–∞—é—Ç—Å—è –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
# ...

async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    asyncio.run(main())